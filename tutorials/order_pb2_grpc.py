# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import order_pb2 as order__pb2


class SubmitOrderServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SubmitSingleOrder = channel.unary_unary(
                '/SubmitOrderService/SubmitSingleOrder',
                request_serializer=order__pb2.SubmitSingleOrderRequest.SerializeToString,
                response_deserializer=order__pb2.SubmitSingleOrderResponse.FromString,
                )
        self.SubmitBookTrade = channel.unary_unary(
                '/SubmitOrderService/SubmitBookTrade',
                request_serializer=order__pb2.SubmitBookTradeRequest.SerializeToString,
                response_deserializer=order__pb2.SubmitBookTradeResponse.FromString,
                )
        self.SubmitPairOrder = channel.unary_unary(
                '/SubmitOrderService/SubmitPairOrder',
                request_serializer=order__pb2.SubmitPairOrderRequest.SerializeToString,
                response_deserializer=order__pb2.SubmitPairOrderResponse.FromString,
                )
        self.ChangePairOrder = channel.unary_unary(
                '/SubmitOrderService/ChangePairOrder',
                request_serializer=order__pb2.ChangePairOrderRequest.SerializeToString,
                response_deserializer=order__pb2.ChangePairOrderResponse.FromString,
                )
        self.CancelPairOrder = channel.unary_unary(
                '/SubmitOrderService/CancelPairOrder',
                request_serializer=order__pb2.CancelPairOrderRequest.SerializeToString,
                response_deserializer=order__pb2.CancelPairOrderResponse.FromString,
                )
        self.ChangeSingleOrder = channel.unary_unary(
                '/SubmitOrderService/ChangeSingleOrder',
                request_serializer=order__pb2.ChangeSingleOrderRequest.SerializeToString,
                response_deserializer=order__pb2.ChangeSingleOrderResponse.FromString,
                )
        self.CancelSingleOrder = channel.unary_unary(
                '/SubmitOrderService/CancelSingleOrder',
                request_serializer=order__pb2.CancelSingleOrderRequest.SerializeToString,
                response_deserializer=order__pb2.CancelSingleOrderResponse.FromString,
                )
        self.SubmitSeedData = channel.unary_unary(
                '/SubmitOrderService/SubmitSeedData',
                request_serializer=order__pb2.SubmitSeedDataRequest.SerializeToString,
                response_deserializer=order__pb2.SubmitSeedDataResponse.FromString,
                )
        self.GetUserAccounts = channel.unary_unary(
                '/SubmitOrderService/GetUserAccounts',
                request_serializer=order__pb2.UserAccountsRequest.SerializeToString,
                response_deserializer=order__pb2.UserAccountsResponse.FromString,
                )
        self.SubmitBasketOrder = channel.unary_unary(
                '/SubmitOrderService/SubmitBasketOrder',
                request_serializer=order__pb2.BasketOrderRequest.SerializeToString,
                response_deserializer=order__pb2.BasketOrderResponse.FromString,
                )
        self.SubscribeOrderInfo = channel.unary_stream(
                '/SubmitOrderService/SubscribeOrderInfo',
                request_serializer=order__pb2.SubscribeOrderInfoRequest.SerializeToString,
                response_deserializer=order__pb2.SubscribeOrderInfoResponse.FromString,
                )
        self.SubmitAllocationOrder = channel.unary_unary(
                '/SubmitOrderService/SubmitAllocationOrder',
                request_serializer=order__pb2.SubmitAllocationOrderRequest.SerializeToString,
                response_deserializer=order__pb2.SubmitAllocationOrderResponse.FromString,
                )
        self.SubmitTradeReport = channel.unary_unary(
                '/SubmitOrderService/SubmitTradeReport',
                request_serializer=order__pb2.SubmitTradeReportRequest.SerializeToString,
                response_deserializer=order__pb2.SubmitTradeReportResponse.FromString,
                )
        self.SubscribeOrderInfoJson = channel.unary_stream(
                '/SubmitOrderService/SubscribeOrderInfoJson',
                request_serializer=order__pb2.SubscribeOrderInfoJsonRequest.SerializeToString,
                response_deserializer=order__pb2.SubscribeOrderInfoJsonResponse.FromString,
                )
        self.GetOrderDetailByOrderId = channel.unary_unary(
                '/SubmitOrderService/GetOrderDetailByOrderId',
                request_serializer=order__pb2.OrderDetailByOrderIdRequest.SerializeToString,
                response_deserializer=order__pb2.OrderDetailByOrderIdResponse.FromString,
                )
        self.GetOrderDetailByDateRange = channel.unary_stream(
                '/SubmitOrderService/GetOrderDetailByDateRange',
                request_serializer=order__pb2.OrderDetailByDateRangeRequest.SerializeToString,
                response_deserializer=order__pb2.OrderDetailByDateRangeResponse.FromString,
                )
        self.GetOrderDetailByOrderTag = channel.unary_unary(
                '/SubmitOrderService/GetOrderDetailByOrderTag',
                request_serializer=order__pb2.OrderDetailByOrderTagRequest.SerializeToString,
                response_deserializer=order__pb2.OrderDetailByOrderTagResponse.FromString,
                )


class SubmitOrderServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SubmitSingleOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitBookTrade(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitPairOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangePairOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelPairOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeSingleOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelSingleOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitSeedData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserAccounts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitBasketOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeOrderInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitAllocationOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitTradeReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeOrderInfoJson(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrderDetailByOrderId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrderDetailByDateRange(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrderDetailByOrderTag(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SubmitOrderServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SubmitSingleOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitSingleOrder,
                    request_deserializer=order__pb2.SubmitSingleOrderRequest.FromString,
                    response_serializer=order__pb2.SubmitSingleOrderResponse.SerializeToString,
            ),
            'SubmitBookTrade': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitBookTrade,
                    request_deserializer=order__pb2.SubmitBookTradeRequest.FromString,
                    response_serializer=order__pb2.SubmitBookTradeResponse.SerializeToString,
            ),
            'SubmitPairOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitPairOrder,
                    request_deserializer=order__pb2.SubmitPairOrderRequest.FromString,
                    response_serializer=order__pb2.SubmitPairOrderResponse.SerializeToString,
            ),
            'ChangePairOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangePairOrder,
                    request_deserializer=order__pb2.ChangePairOrderRequest.FromString,
                    response_serializer=order__pb2.ChangePairOrderResponse.SerializeToString,
            ),
            'CancelPairOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelPairOrder,
                    request_deserializer=order__pb2.CancelPairOrderRequest.FromString,
                    response_serializer=order__pb2.CancelPairOrderResponse.SerializeToString,
            ),
            'ChangeSingleOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeSingleOrder,
                    request_deserializer=order__pb2.ChangeSingleOrderRequest.FromString,
                    response_serializer=order__pb2.ChangeSingleOrderResponse.SerializeToString,
            ),
            'CancelSingleOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelSingleOrder,
                    request_deserializer=order__pb2.CancelSingleOrderRequest.FromString,
                    response_serializer=order__pb2.CancelSingleOrderResponse.SerializeToString,
            ),
            'SubmitSeedData': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitSeedData,
                    request_deserializer=order__pb2.SubmitSeedDataRequest.FromString,
                    response_serializer=order__pb2.SubmitSeedDataResponse.SerializeToString,
            ),
            'GetUserAccounts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserAccounts,
                    request_deserializer=order__pb2.UserAccountsRequest.FromString,
                    response_serializer=order__pb2.UserAccountsResponse.SerializeToString,
            ),
            'SubmitBasketOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitBasketOrder,
                    request_deserializer=order__pb2.BasketOrderRequest.FromString,
                    response_serializer=order__pb2.BasketOrderResponse.SerializeToString,
            ),
            'SubscribeOrderInfo': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeOrderInfo,
                    request_deserializer=order__pb2.SubscribeOrderInfoRequest.FromString,
                    response_serializer=order__pb2.SubscribeOrderInfoResponse.SerializeToString,
            ),
            'SubmitAllocationOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitAllocationOrder,
                    request_deserializer=order__pb2.SubmitAllocationOrderRequest.FromString,
                    response_serializer=order__pb2.SubmitAllocationOrderResponse.SerializeToString,
            ),
            'SubmitTradeReport': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitTradeReport,
                    request_deserializer=order__pb2.SubmitTradeReportRequest.FromString,
                    response_serializer=order__pb2.SubmitTradeReportResponse.SerializeToString,
            ),
            'SubscribeOrderInfoJson': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeOrderInfoJson,
                    request_deserializer=order__pb2.SubscribeOrderInfoJsonRequest.FromString,
                    response_serializer=order__pb2.SubscribeOrderInfoJsonResponse.SerializeToString,
            ),
            'GetOrderDetailByOrderId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrderDetailByOrderId,
                    request_deserializer=order__pb2.OrderDetailByOrderIdRequest.FromString,
                    response_serializer=order__pb2.OrderDetailByOrderIdResponse.SerializeToString,
            ),
            'GetOrderDetailByDateRange': grpc.unary_stream_rpc_method_handler(
                    servicer.GetOrderDetailByDateRange,
                    request_deserializer=order__pb2.OrderDetailByDateRangeRequest.FromString,
                    response_serializer=order__pb2.OrderDetailByDateRangeResponse.SerializeToString,
            ),
            'GetOrderDetailByOrderTag': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrderDetailByOrderTag,
                    request_deserializer=order__pb2.OrderDetailByOrderTagRequest.FromString,
                    response_serializer=order__pb2.OrderDetailByOrderTagResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'SubmitOrderService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SubmitOrderService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SubmitSingleOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SubmitOrderService/SubmitSingleOrder',
            order__pb2.SubmitSingleOrderRequest.SerializeToString,
            order__pb2.SubmitSingleOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitBookTrade(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SubmitOrderService/SubmitBookTrade',
            order__pb2.SubmitBookTradeRequest.SerializeToString,
            order__pb2.SubmitBookTradeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitPairOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SubmitOrderService/SubmitPairOrder',
            order__pb2.SubmitPairOrderRequest.SerializeToString,
            order__pb2.SubmitPairOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangePairOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SubmitOrderService/ChangePairOrder',
            order__pb2.ChangePairOrderRequest.SerializeToString,
            order__pb2.ChangePairOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelPairOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SubmitOrderService/CancelPairOrder',
            order__pb2.CancelPairOrderRequest.SerializeToString,
            order__pb2.CancelPairOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeSingleOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SubmitOrderService/ChangeSingleOrder',
            order__pb2.ChangeSingleOrderRequest.SerializeToString,
            order__pb2.ChangeSingleOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelSingleOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SubmitOrderService/CancelSingleOrder',
            order__pb2.CancelSingleOrderRequest.SerializeToString,
            order__pb2.CancelSingleOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitSeedData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SubmitOrderService/SubmitSeedData',
            order__pb2.SubmitSeedDataRequest.SerializeToString,
            order__pb2.SubmitSeedDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserAccounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SubmitOrderService/GetUserAccounts',
            order__pb2.UserAccountsRequest.SerializeToString,
            order__pb2.UserAccountsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitBasketOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SubmitOrderService/SubmitBasketOrder',
            order__pb2.BasketOrderRequest.SerializeToString,
            order__pb2.BasketOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeOrderInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/SubmitOrderService/SubscribeOrderInfo',
            order__pb2.SubscribeOrderInfoRequest.SerializeToString,
            order__pb2.SubscribeOrderInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitAllocationOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SubmitOrderService/SubmitAllocationOrder',
            order__pb2.SubmitAllocationOrderRequest.SerializeToString,
            order__pb2.SubmitAllocationOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitTradeReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SubmitOrderService/SubmitTradeReport',
            order__pb2.SubmitTradeReportRequest.SerializeToString,
            order__pb2.SubmitTradeReportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeOrderInfoJson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/SubmitOrderService/SubscribeOrderInfoJson',
            order__pb2.SubscribeOrderInfoJsonRequest.SerializeToString,
            order__pb2.SubscribeOrderInfoJsonResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrderDetailByOrderId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SubmitOrderService/GetOrderDetailByOrderId',
            order__pb2.OrderDetailByOrderIdRequest.SerializeToString,
            order__pb2.OrderDetailByOrderIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrderDetailByDateRange(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/SubmitOrderService/GetOrderDetailByDateRange',
            order__pb2.OrderDetailByDateRangeRequest.SerializeToString,
            order__pb2.OrderDetailByDateRangeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrderDetailByOrderTag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SubmitOrderService/GetOrderDetailByOrderTag',
            order__pb2.OrderDetailByOrderTagRequest.SerializeToString,
            order__pb2.OrderDetailByOrderTagResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
